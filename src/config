<?php
/**
 * App Configuration
 */
class Config extends Core
{
	private $app_param_all;
	private $parameters;

	/**
	 * Parameters available. Use this array to validate or to choose from
	 * set of .env parameters.
	 * @var [type]
	 */
	protected array $relation_param;

	/**
	 * Read parameter's value by key from .env file
	 * @param  string 		$app_param 	param key
	 * @return string|bool            	param value | param does not exist
	 */
	protected function getAppParam(string $app_param)
	{
		$this->app_param_all = $this->readFileToArr();

		foreach ($this->app_param_all as $key => $value)
		{
			if ($result = strstr($value, $app_param))
			{
				return trim(ltrim(strstr($result, '='), '='));
			}
		}
		return false;
	}

	/**
	 * Rewrite parameter's value by key from .env file
	 * @param 	string 		$arg_key   	param key
	 * @param 	string|null $arg_value 	param value | delete param value
	 * @return 	bool|null            	if param saved | can not read param
	 */
	protected function setAppParam(string $arg_key, $arg_value = null)
	{
		if ($this->getAppParam($this->relation_param[$arg_key]) !== false)
		{
			if ($arg_value === null) {
				$this->eraseDataUException(); 		// challenging message to user
			}
			$app_param = preg_grep('/^'.$this->relation_param[$arg_key].'*/', $this->app_param_all);
			//Remove dublicated parameters
			if (count($app_param) > 1) {
		 		$app_param = array_shift($app_param);
		 	}
		 	$position = key($app_param);
		 	$app_param_new = strstr(current($app_param), '=', true).'='.$arg_value;

		 	$this->app_param_all[$position] = $app_param_new;
			return $this->saveAppParameters() ? true : false;
		}
		return;
	}

	/**
	 * Prepare array of new data for validation.
	 * @param  string 		$arg_key   	param key
	 * @param  string|null 	$arg_value 	param value | delete param value
	 * @return array 					user's params for validation
	 */
	protected function getValidAppParams($arg_key, $arg_value = null): array
	{
		return $this->parameters = $this->validateParam($this->prepToValidate([$arg_key, $arg_value]), array_keys($this->relation_param));
	}

	/**
	 * Rewrite all .env data to .env file. Delete previous data.
	 * @return bool [description]
	 */
	protected function saveAppParameters(): bool
	{
		$file_data = implode("\n", $this->app_param_all);
		$fl = fopen('.env', 'a');
		if (!file_put_contents('.env', print_r($file_data, true))) {
			fclose($fl);
			return false;
		}
		fclose($fl);
		return true;
	}
}
