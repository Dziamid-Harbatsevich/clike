<?php
require('io');
/**
 * Core Class for universal and app basic functions
 */
class Core extends IO
{
	/**
	 * Configuration settings credentials file
	 * @var string
	 */
	protected $env_file = '.env';

	/**
	 * Get file content and explode it to array by lines ignoring empty lines
	 * @return array       [numeric keys => lines from .env file]
	 */
	protected function readFileToArr(): array
	{
		return file($this->env_file, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
	}

	/**
	 * Check if params of the CLI command exists for current controller.
	 * @param  array  $validated 	[param name => new value]
	 * @param  array  $rules     	[param name => .env keys]
	 * @return array            	[param name => new value] if param exists for current controller
	 */
	protected static function validateParam(array $validated, array $rules): array
	{
		return array_intersect($validated, $rules);
	}

	/**
	 * Delete null, "" and false from array.
	 * @param  array  $data [description]
	 * @return [type]       [description]
	 */
	public function prepToValidate(array $data)
	{
		return array_filter($data, 'strlen');
	}

	/**
	 * Process execution in background via CLI
	 * @param  string $cmd command to execute
	 * @return nothing
	 */
	protected static function execInBackground(string $cmd)
	{
		if (substr(php_uname(), 0, 7) == "Windows"){
		  pclose(popen("start /B ". $cmd, "r"));
		}
		else {
		  exec($cmd . " > /dev/null &");
		}
	}
}
